include: "conf.sk"

rule keep_snp_chrom:
    input: WANTED_EIDS, HAPLOREG, WANTED_CHROMHMM
    output: "wanted_rs_chrom"
    shell: """
            sed 1d {input[1]} | cut -f 6,15 | perl -ane 'my @ch=split(";", $F[1]); foreach my $c (@ch) {{print $F[0]."\t".$c."\n";}}' \
            | tr "," "\t" |  filter_1col 2 {input[0]} | filter_1col 3 {input[2]} | cut -f 1 | sort | uniq > {output}
           """

#[egrassi@gncomp3 data]$ head -n 1 huang_nc_haploreg_v4.txt | tr "\t" "\n" | grep -n Chromatin_Marks
#17:Chromatin_Marks
rule keep_snp_markers:
    input: WANTED_EIDS, HAPLOREG
    output: "wanted_rs_{col}"
    shell: """
            sed 1d {input[1]} | cut -f 6,{wildcards.col} | perl -ane 'my @ch=split(";", $F[1]); foreach my $c (@ch) {{print $F[0]."\t".$c."\n";}}' \
            | tr "," "\t" |  filter_1col 2 {input[0]} | cut -f 1 | sort | uniq > {output}
           """

#[egrassi@gncomp3 data]$ head -n 1 huang_nc_haploreg_v4.txt | tr "\t" "\n" | bawk '{print NR,$1}'
#1       chr
#2       pos_hg38
#3       r2
#4       D'
#5       is_query_snp
#6       rsID
#7       ref
#8       alt
#9       AFR
#10      AMR
#11      ASN
#12      EUR
#13      GERP_cons
#14      SiPhy_cons
#15      Chromatin_States
#16      Chromatin_States_Imputed
#17      Chromatin_Marks
#18      DNAse
#19      Proteins
#20      eQTL
#21      gwas
#22      grasp
#23      Motifs
#24      GENCODE_id
#25      GENCODE_name
#26      GENCODE_direction
#27      GENCODE_distance
#28      RefSeq_id
#29      RefSeq_name
#30      RefSeq_direction
#31      RefSeq_distance
#32      dbSNP_functional_annotation
#33      query_snp_rsid

# THere are some truncated lines:
#[egrassi@gncomp3 huang_haploreg]$ bawk 'NF!=33{print}' /data/egrassi/snaketree/prj/syscid/local/share/data/huang_nc_haploreg_v4.txt | wc -l
#9

rule haploreg:
    input: "wanted_rs_chrom", "wanted_rs_17", HAPLOREG
    output: "wanted_haploreg"
    shell: """
            head -n 1 {input[2]} | cut -f 1,2,6,7,8,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,32 > {output}
            bawk 'NF==33' < {input[2]} | filter_1col 6 <(cat {input[0]} {input[1]}) | cut -f 1,2,6,7,8,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,32 >> {output}
           """

# need to translate eids too
rule annotate_motif_divided:
    input: SNPS, "wanted_haploreg", LEAD
    output: "haploreg_pruned.xls"
    shell:  """
            head -n 1 {input[1]} > {output}.header
            sed 1d {input[0]} | filter_1col 5 <(cat {input[1]} | cut -f 3 | sort | uniq) \
            | translate -f 3 -a {input[1]} 5 \
            | translate -a -v -e "" <(bawk '{{print $1,"lead"}}' < {input[2]}) 5 > {output}.body
            cat {output}.header {output}.body | tab2xls > {output}
            rm {output}.header
            """
