include: "snakemake"

def leave_one_out(wildcards):
    import glob
    import re
    res = []
    all_peaks = glob.glob(PEAKS+"/{}_wanted_*.gappedPeak.gz".format(wildcards.mark))
    this_peak = re.compile(wildcards.eid)
    mono_encode = re.compile("E124")
    for p in all_peaks:
        if re.search(this_peak, p) is None and not re.search(mono_encode, p):
            res.append(p)
    return res

rule all_specific:
    input: expand("{eid}_{mark}.specific.peaks.gz", eid=PREFIX, mark=WANTED_MARKERS)

rule specific_peaks:
    input:
        leave_one_out
    output: "{eid}_{mark}.specific.peaks.gz"
    shell: "bedtools intersect -v -a " + PEAKS +"/{wildcards.mark}_wanted_{wildcards.eid}.gappedPeak.gz -b <(zcat {input}) | gzip > {output}"

#zcat peaks/H3K4me1_*control*.gz | sort -k1,1 -k2,2n

rule all_control_peaks:
    input: expand("{mark}_control.all.gz", mark=WANTED_MARKERS)

def get_controls(wildcards):
    import glob
    return glob.glob(PEAKS+"/{}_control_*.gappedPeak.gz".format(wildcards.mark))

rule control_peaks:
    input: 
        get_controls
    output: "{mark}_control.all.gz"
    shell: "zcat {input} | sort -k1,1 -k2,2n | gzip > {output}"
    
rule all_more_specific:
    input: expand("{eid}_{mark}.morespecific.peaks.gz", eid=PREFIX, mark=WANTED_MARKERS)

rule more_specific_peaks:
    input: "{eid}_{mark}.specific.peaks.gz", "{mark}_control.all.gz"
    output: "{eid}_{mark}.morespecific.peaks.gz"
    shell: "bedtools intersect -v -a  {input[0]} -b {input[1]} | gzip > {output}"

rule sum_peak:
    input: expand("{eid}_{mark}.morespecific.peaks.gz", eid=PREFIX, mark=WANTED_MARKERS)
    output: "summary_peaks_annot.gz"
    shell: 
      """
        for f in {input}; do zcat $f | cut -f 1,2,3,13,15 | awk -F'\t' -v OFS='\t' -vF=$f '{{print F, $0}}'; done \
        | sed 's/\.morespecific\.peaks\.gz//1;'  | tr "_" "\t"| /data/egrassi/bioinfotree/local/bin/translate -a <(cut -f 1,4 ../eid_info) 1 \
        | awk -F'\t' -v OFS='\t' '{{print $3,"wanted",$1,$2,$4,$5,$6,$7,$8}}' | gzip > {output}
      """

# from 
#E029    BLD.CD14.PC     H3K27ac chr5    94597270        94599040        30.74577        151.84692
#to
#colnames(data) <- c("mark","class","eid", "desc","chr", "start","end","signal", "logq")
#

rule peaks_info:
    input: "summary_peaks_annot.gz"
    output: "peak_info.html"
    params: SRC_DIR+"/plot_roadmap_peaks.Rmd"
    shell:
        """
        WD=`pwd`; \\
        Rscript -e \"require( 'rmarkdown' ); render('{params}', params=list(data='{input}', wd=\\"$WD\\"), output_file='{output}', output_dir=\\"$WD\\")\"
        """
